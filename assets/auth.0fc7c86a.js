import{A as o,S as i}from"./route-block.b1cafca1.js";import{a as n}from"./index.36d4ce84.js";class a extends o{constructor(){const s=["login","password","token","createdAt"];super(s)}}class p extends i{constructor(){super("/",new a,n)}async login(s){console.log("[SERVICE] login");try{const{data:e}=await this._api.post("/user/login/",{login:s.apiData().login,password:s.apiData().password});return this._session.access_token=e.token,this._session.access_token_timestamp=new Date().getTime(),this._session.isLoggedIn=!0,this._session.user=JSON.stringify(e.user),Promise.resolve(this.parseData(e.user))}catch(e){return e.msg?Promise.reject(e.msg):Promise.reject(e)}}async register(s){console.log("[SERVICE] register");try{const{data:e}=await this._api.post("/user/create/",{login:s.apiData().login,password:s.apiData().password});return this._session.user=e.user,this._session.access_token=e.token,this._session.isLoggedIn=!0,this._session.access_token_timestamp=new Date().getTime(),Promise.resolve(e.user)}catch(e){return e.response?Promise.reject(e.response):Promise.reject(e)}}async get(){console.log("[SERVICE] get");try{const{data:s}=await this._api.get("/user/token/");return this._session.user=s.user,this._session.access_token=s.token,Promise.resolve(s.user)}catch(s){return s.response&&s.response.status,s.response?Promise.reject(s.response):Promise.reject(s)}}async changePassword(s,e){console.log("[SERVICE] changePassword");try{const{data:r}=await this._api.post("/user/changePassword/",{newPassword:s,oldPassword:e});return this._session.user=r.user,this._session.access_token=r.token,Promise.resolve(r.user)}catch(r){return r.response&&r.response.status,r.response?Promise.reject(r.response):Promise.reject(r)}}async logout(){console.log("[SERVICE] logout"),this._session.access_token="",this._session.isLoggedIn=!1,this._session.user={}}}export{p as A,a as U};
